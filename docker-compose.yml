services:
  postgres:
    image: "postgres"
    container_name: "postgres"
    environment:
      POSTGRES_PASSWORD: $DockerComposePostgresPassword
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default
  redis:
    image: "redis/redis-stack:latest"
    container_name: "redis"
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - default
    environment:
      REDIS_ARGS: --appendonly yes
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=$DockerComposeRabbitMQPassword
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - default
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
      - rabbitmq:/var/log/rabbitmq
  jube.webapi:
    image: jube.app
    container_name: "jube.webapi"
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    links:
      - redis
      - postgres
      - rabbitmq
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:5001
      - ConnectionString=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=$DockerComposePostgresPassword;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100;
      - ReportConnectionString=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=$DockerComposePostgresPassword;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100;
      - EnableSandbox=False
      - JWTKey=$DockerComposeJWTKey
      - RedisConnectionString=redis
      - EnableExhaustiveTraining=False
      - Landlord=True
      - EnableReprocessing=False
      - EnableSanctionLoader=False
      - CachePruneServer=False
      - EnableTtlCounter=False
      - EnableSearchKeyCache=False
      - EnableCasesAutomation=False
      - AMQP=True
      - AMQPUri=amqp://admin:$DockerComposeRabbitMQPassword@rabbitmq:5672/
      - PasswordHashingKey=$DockerComposePasswordHashingKey
      - EnableMigration=True
      - Log4NetLogLevel=ERROR
    ports:
      - "5001:5001"
    networks:
      - default
    build:
      context: .
      dockerfile: Jube.App/Dockerfile
  jube.jobs:
    image: jube.app
    container_name: "jube.jobs"
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    links:
      - redis
      - postgres
      - rabbitmq
    environment:
      - ConnectionString=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=$DockerComposePostgresPassword;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100;
      - ReportConnectionString=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=$DockerComposePostgresPassword;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100;
      - RedisConnectionString=redis
      - JWTKey=$DockerComposeJWTKey
      - EnableExhaustiveTraining=True
      - EnableReprocessing=True
      - EnableSanctionLoader=True
      - CachePruneServer=True
      - EnableTtlCounter=True
      - EnableSearchKeyCache=True
      - EnableCasesAutomation=True
      - StreamingActivationWatcher=False
      - EnableCallback=True
      - EnablePublicInvokeController=True
      - AMQP=True
      - AMQPUri=amqp://admin:$DockerComposeRabbitMQPassword@rabbitmq:5672/
      - PasswordHashingKey=$DockerComposePasswordHashingKey
      - EnableMigration=False    
      - Log4NetLogLevel=ERROR
    networks:
      - default
    build:
      context: .
      dockerfile: Jube.App/Dockerfile
networks:
  default:
    driver: bridge
volumes:
  postgres:
    external: false
  redis:
    external: false
  rabbitmq:
    external: false