@using Jube.App.Code
@* Copyright (C) 2022-present Jube Holdings Limited
 *
 * This file is part of Jube™ software.
 *
 * Jube™ is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License 
 * as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 * Jube™ is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty  
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.

 * You should have received a copy of the GNU Affero General Public License along with Jube™. If not, 
 * see <https://www.gnu.org/licenses/>.
 *@

@inject DynamicEnvironment.DynamicEnvironment DynamicEnvironment
@{
    var landlord = false;
    var sandpit = DynamicEnvironment.AppSettings("EnableSandbox").Equals("True", StringComparison.OrdinalIgnoreCase);
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - Jube.App</title>
    <link rel="stylesheet" href="/styles/bootstrap.min.css"/>
    <link rel="stylesheet" href="/styles/site.css"/>
    <link rel="stylesheet" href="/styles/jube.css"/>
    <link rel="stylesheet" href="/kendo/styles/kendo.common.min.css"/>
    <link rel="stylesheet" href="/kendo/styles/kendo.silver.min.css"/>
    <script src="/kendo/js/jquery.min.js"></script>
    <script src="/kendo/js/kendo.all.min.js"></script>
    <script>        
        $(document).ready(function () {
            $("#menu").kendoMenu();               
        });
    </script>
    @await RenderSectionAsync("Scripts", false)
</head>
<body>
<header>
@{
    System.Diagnostics.Debug.Assert(User.Identity != null, "User.Identity != null");
}
@if (!User.Identity.IsAuthenticated)
{
    <img href="https://www.jube.io" style="width: 200px; padding-top: 3px;" alt="Jube" src="/images/logo.png"/>
}
else
{
    var permissionValidation = new PermissionValidation(DynamicEnvironment.AppSettings("ConnectionString"), User.Identity?.Name);
    landlord = permissionValidation.Landlord;

    <ul id="menu">
    <li>
        <img href="https://www.jube.io" style="height: 20px" alt="Jube" src="/images/logo.png"/>
    </li>

    @if (permissionValidation.Validate(new[] { 1 }))
    {
        <li>
            <a href='/Case/CaseSearch'>Cases</a>
        </li>
    }

    @if (permissionValidation.Validate(new[] { 2 }))
    {
        <li>
            <a href='/Model/Suppression'>Suppression</a>
        </li>
    }

    @if (permissionValidation.Validate(new[] { 3 }))
    {
        <li>
            <a href='/Tree?Page=List'>Lists</a>
        </li>
    }

    @if (permissionValidation.Validate(new[] { 4 }))
    {
        <li>
            <a href='/Tree?Page=Dictionary'>Dictionary</a>
        </li>
    }

    @if (permissionValidation.Validate(new[] { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 37 }))
    {
        <li>
            Models
            <ul>
                @if (permissionValidation.Validate(new[] { 5 }))
                {
                    <li>
                        <a href='/Model/Synchronisation'>Synchronisation</a>
                    </li>
                }

                @if (permissionValidation.Validate(new[] { 6 }))
                {
                    <li>
                        <a href='/Model/EntityAnalysisModel'>Models</a>
                    </li>
                }

                @if (permissionValidation.Validate(new[] { 7, 8, 9, 10, 11, 37 }))
                {
                    <li>
                        References
                        <ul>
                            @if (permissionValidation.Validate(new[] { 7 }))
                            {
                                <li>
                                    <a href='/Tree?Page=RequestXPath'>Request XPath</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 8 }))
                            {
                                <li>
                                    <a href='/Tree?Page=InlineFunction'>Inline Functions</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 9 }))
                            {
                                <li>
                                    <a href='/Tree?Page=InlineScript'>Inline Scripts</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 10 }))
                            {
                                <li>
                                    <a href='/Tree?Page=GatewayRule'>Gateway Rules</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 11 }))
                            {
                                <li>
                                    <a href='/Tree?Page=Sanctions'>Sanctions</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 37 }))
                            {
                                <li>
                                    <a href='/Tree?Page=Tag'>Tags</a>
                                </li>
                            }
                        </ul>
                    </li>
                }

                @if (permissionValidation.Validate(new[] { 12, 13, 14 }))
                {
                    <li>
                        <a>Abstraction</a>
                        <ul>

                            @if (permissionValidation.Validate(new[] { 12 }))
                            {
                                <li>
                                    <a href='/Tree?Page=TTLCounter'>TTL Counters</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 13 }))
                            {
                                <li>
                                    <a href='/Tree?Page=AbstractionRule'>Abstraction Rules</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 14 }))
                            {
                                <li>
                                    <a href='/Tree?Page=AbstractionCalculation'>Abstraction Calculation</a>
                                </li>
                            }
                        </ul>
                    </li>
                }

                @if (permissionValidation.Validate(new[] { 15, 16 }))
                {
                    <li>
                        <a>Machine Learning</a>
                        <ul>
                            @if (permissionValidation.Validate(new[] { 15 }))
                            {
                                <li>
                                    <a href='/Tree?Page=Adaptation'>HTTP Adaptation</a>
                                </li>
                            }
                            @if (permissionValidation.Validate(new[] { 16 }))
                            {
                                <li>
                                    <a href='/Tree?Page=Exhaustive'>Exhaustive Adaptation</a>
                                </li>
                            }
                        </ul>
                    </li>
                }

                @if (permissionValidation.Validate(new[] { 17 }))
                {
                    <li>
                        <a href='/Tree?Page=ActivationRule'>Activation Rules</a>
                    </li>
                }

                @if (permissionValidation.Validate(new[] { 18, 19, 20, 21, 22, 23, 24, 25 }))
                {
                    <li>
                        Cases Workflows
                        <ul>
                            @if (permissionValidation.Validate(new[] { 18 }))
                            {
                                <li>
                                    <a href='/Tree?Page=CaseWorkflow'>Cases Workflows</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 19 }))
                            {
                                <li>
                                    <a href='/Tree?Page=CaseWorkflowStatus'>Cases Workflows Status</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 20 }))
                            {
                                <li>
                                    <a href='/Tree?Page=CaseWorkflowXPath'>Cases Workflows XPath</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 21 }))
                            {
                                <li>
                                    <a href='/Tree?Page=CaseWorkflowForm'>Cases Workflow Form</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 22 }))
                            {
                                <li>
                                    <a href='/Tree?Page=CaseWorkflowAction'>Cases Workflow Action</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 23 }))
                            {
                                <li>
                                    <a href='/Tree?Page=CaseWorkflowDisplay'>Cases Workflow Display</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 24 }))
                            {
                                <li>
                                    <a href='/Tree?Page=CaseWorkflowMacro'>Cases Workflow Macro</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 25 }))
                            {
                                <li>
                                    <a href='/Tree?Page=CaseWorkflowFilter'>Cases Workflow Filter</a>
                                </li>
                            }
                        </ul>
                    </li>
                }
                @if (permissionValidation.Validate(new[] { 26 }))
                {
                    <li>
                        <a href='/Tree?Page=Reprocessing'>Reprocessing</a>
                    </li>
                }
            </ul>
        </li>
    }

    @if (permissionValidation.Validate(new[] { 28 }))
    {
        <li>
            <a href='/Visualisation/VisualisationDirectory'>Visualisation</a>
        </li>
    }

    @if (permissionValidation.Validate(new[] { 29 }))
    {
        <li>
            <a href='/Sanction/Search'>Sanctions</a>
        </li>
    }

    @if (permissionValidation.Validate(new[] { 30 }))
    {
        <li>
            <a href='/Watcher/Activation'>Watcher</a>
        </li>
    }

    @if (permissionValidation.Validate(new[] { 27, 34, 35, 36, 31, 32, 33 }))
    {
        <li>
            Administration
            <ul>
                @if (permissionValidation.Validate(new[] { 31, 32, 33 }))
                {
                    <li>
                        Visualisations
                        <ul>
                            @if (permissionValidation.Validate(new[] { 31 }))
                            {
                                <li>
                                    <a href='/Administration/VisualisationRegistry'>Visualisations</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 32 }))
                            {
                                <li>
                                    <a href='/Tree?Page=VisualisationRegistryParameter'>Visualisations Parameters</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 33 }))
                            {
                                <li>
                                    <a href='/Tree?Page=VisualisationRegistryDatasource'>Visualisations Datasources</a>
                                </li>
                            }
                        </ul>
                    </li>
                }

                @if (permissionValidation.Validate(new[] { 34, 35, 36 }))
                {
                    <li>
                        Security
                        <ul>
                            @if (landlord)
                            {
                                <li>
                                    <a href='/Administration/TenantRegistry'>Tenants</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 34 }))
                            {
                                <li>
                                    <a href='/Administration/RoleRegistry'>Roles</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 36 }))
                            {
                                <li>
                                    <a href='/Tree/?Page=RoleRegistryPermission'>Permissions</a>
                                </li>
                            }

                            @if (permissionValidation.Validate(new[] { 35 }))
                            {
                                <li>
                                    <a href='/Tree?Page=UserRegistry'>Users</a>
                                </li>
                            }
                        </ul>
                    </li>
                }

                @if (landlord)
                {
                    <li>
                        Performance
                        <ul>
                            <li>
                                <a href='/Administration/HTTPProcessingCounter'>HTTP Processing Counters</a>
                            </li>

                            <li>
                                <a href='/Administration/EntityAnalysisAsynchronousQueueBalance'>Asynchronous Queue Balances</a>
                            </li>

                            <li>
                                <a href='/Administration/EntityAnalysisModelAsynchronousQueueBalance'>Model Asynchronous Queue Balances</a>
                            </li>

                            <li>
                                <a href='/Administration/EntityAnalysisModelProcessingCounter'>Model Asynchronous Processing Counter</a>
                            </li>
                        </ul>
                    </li>
                }
            </ul>
        </li>
    }

    <li>
        Account
        <ul>
            <li>
                <a href="/Account/ChangePassword">Change Password</a>
            </li>

            <li>
                <a href="/Account/Logout">Logout</a>
            </li>
        </ul>
    </li>
    </ul>
}
</header>
<main role="main">
    @RenderBody()
</main>
<footer>
    @if (landlord)
    {
        <div class="tenantSwitcher">
            <input id="Tenant"/>
        </div>
    }
    <div class="footerCopyright">
        Jube&#8482;. &copy; Jube Holdings Limited 2022 to present.
    </div>
</footer>
<script>
    @if (landlord)
    {
        <text>
            $("#Tenant").kendoDropDownList({
                dataTextField: 'name',
                dataValueField: 'id',
                select: onSelect,
                dataBound: onDataBound,
                dataSource: {
                    type: 'json',                    
                    transport: {
                        read: '/api/TenantRegistry'
                    }
                }
            });
            
            function onDataBound() {
                $.get( "/api/UserInTenant/GetCurrentTenantRegistry", function(data) {                  
                    $("#Tenant").data("kendoDropDownList").value(data.tenantRegistryId);
                });
            }
            
            function onSelect(e) {
                const dataItem = this.dataItem(e.item.index());            
                $.ajax({
                    url: '/api/UserInTenant',
                    type: 'PUT',
                    data: {
                        tenantRegistryId: dataItem.id
                    },
                    success: function () {
                        window.location.reload();
                    }
                });
            }                     
        </text>
    } 
</script>

@if (sandpit)
{
    <script async src="https://www.googletagmanager.com/gtag/js?id={{ site.data.settings.google-analytics }}"></script>
    <script>
    window.dataLayer = window.dataLayer || [];

    function gtag() {
        dataLayer.push(arguments);
    }

    gtag('js', new Date());

    gtag('config', '{{ site.data.settings.google-analytics }}');
</script>
    <script async
            src="https://agent-8914474d9017ddd3a9eb-5qcft.ondigitalocean.app/static/chatbot/widget.js"
            data-agent-id="5381000c-e55f-11ef-bf8f-4e013e2ddde4"
            data-chatbot-id="WhrVpU0dLvinqm7YiEBp1L-hOjorZf4K"
            data-name="Ask Jooby"
            data-primary-color="#2FAB9B"
            data-secondary-color="#005F7F"
            data-button-background-color="#2FAB9B"
            data-starting-message="Hey there! 👋 I’m Jooby—the bold, confident buffalo strutting across the homepage. 🦬✨ I’ve devoured the entire manual and knowledge base (yep, every single word).

Got questions about Jube—how it works, what it can do, or how to make the most of it? Fire away! 💡🚀 I’m here to help.

Just a heads-up: while I’m pretty smart, I’m a generalized AI, so not everything I say will be 100% spot-on. But I’ll always steer you in the right direction!

For verified support, email my handler at support@jube.io. 📩

Go on, test me! 😉"
            data-logo="/static/chatbot/icons/default-agent.svg">
</script>
}
</body>
</html>