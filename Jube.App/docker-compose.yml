services:
  postgres:
    image: "postgres"
    container_name: "postgres"
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default
  redis:
    image: "redis/redis-stack:latest"
    container_name: "redis"
    volumes:
      - ./redis/data:/data
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - default
    environment:
      REDIS_ARGS: --appendonly yes
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - default
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/data/:/var/log/rabbitmq
  jube.webapi:
    image: jube.app
    depends_on:
        postgres:
          condition: service_started
        redis:
          condition: service_started
        rabbitmq:
          condition: service_started
    deploy:
      mode: replicated
      replicas: 1
    links:
      - redis
      - postgres
      - rabbitmq
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:5001
      - ConnectionString=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=mysecretpassword;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100;
      - ReportConnectionString=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=mysecretpassword;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100;
      - EnableSandbox=True
      - JWTKey=IMPORTANT:_ChangeThisKey_~%pvif3KRo!3Mk|1oMC50TvAPi%{mUt<9"B&|>DP|GZy"YYWeVrNUqLQE}mz{L
      - RedisConnectionString=redis
      - AMQP=True
      - AMQPUri=amqp://guest:guest@rabbitmq:5672/
      - EnableExhaustiveTraining=False
      - EnableCacheIndex=False
      - EnableReprocessing=False
      - EnableSanctionLoader=False
      - CachePruneServer=False
      - EnableTtlCounter=False
      - EnableSearchKeyCache=False
      - EnableCasesAutomation=False
      - EnableSandpit=True
    ports:
      - "5001:5001"
    networks:
      - default
    build:
      context: .
      dockerfile: Jube.App/Dockerfile
  jube.jobs:
        image: jube.app
        depends_on:
          postgres:
            condition: service_started
          redis:
            condition: service_started
          rabbitmq:
            condition: service_started
        links:
          - redis
          - postgres
          - rabbitmq
        environment:
          - ConnectionString=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=mysecretpassword;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100;
          - ReportConnectionString=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=mysecretpassword;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100;
          - RedisConnectionString=redis
          - AMQP=True
          - AMQPUri=amqp://guest:guest@rabbitmq:5672/
          - JWTKey=IMPORTANT:_ChangeThisKey_~%pvif3KRo!3Mk|1oMC50TvAPi%{mUt<9"B&|>DP|GZy"YYWeVrNUqLQE}mz{L
          - EnableExhaustiveTraining=True
          - EnableCacheIndex=True
          - EnableReprocessing=True
          - EnableSanctionLoader=True
          - CachePruneServer=True
          - EnableTtlCounter=True
          - EnableSearchKeyCache=True
          - EnableCasesAutomation=True
          - StreamingActivationWatcher=True
          - EnableCallback=True
          - EnablePublicInvokeController=True
        networks:
          - default
        build:
          context: .
          dockerfile: Jube.App/Dockerfile

networks:
  default:
    driver: bridge